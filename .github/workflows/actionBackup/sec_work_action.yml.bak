name: 'sec_das_daily'

on:
  workflow_dispatch:
    inputs:
        logLevel:
          description: 'Log level'     
          required: true
          default: 'warning'
        tags:
          description: 'action'  
  #schedule:
  #  - cron:  '00 00 * * *'

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codes
        uses: actions/checkout@v2
        with:
          repository: 'Eloco/Sec-action-playwright-aws-md5'
          token: '${{ secrets.SEC_TOKEN     }}'


      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: set cn-lang
        run: |
            sudo apt-get install fonts-wqy-zenhei
        continue-on-error: true

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install pipreqs
            pipreqs .
            pip install -r requirements.txt
            python -m playwright install

      - name: run python downloader
        run: |
            export ISI_USER=${{ secrets.WORK_OUTLOOK_USER }}
            export ISI_PASS=${{ secrets.WORK_OUTLOOK_KEY }}
            export command="python script/playwright_das.py 2>/dev/null"
            $command || $command  #retry command twice 

      - name: aws setup
        run: |
            python -m pip install awscli
            mkdir ~/.aws
            echo "[default]" >> ~/.aws/credentials
            echo "[default]" >> ~/.aws/config
            echo "aws_access_key_id    = ${{ secrets.AWS_ACCESS_KEY_ID     }}" >> ~/.aws/credentials
            echo "aws_secret_access_key= ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
            echo "region               = ap-east-1"                            >> ~/.aws/config

      - name: aws md5 check
        if: ${{ env.IF_AWS == 'True'}}
        run: |
            export action_bucket=s3://`echo ${GITHUB_REPOSITORY_OWNER}action | tr "[A-Z]" "[a-z]"`
            export command="python aws/md5_aws.py --files_path=screenshot 2>/dev/null"
            files_num=`$command || $command || echo 0` #retry command twice 
            echo '::set-output name=FILE_NUM::'$files_num
        id: aws-md5
        env:
          IF_AWS: False

      - name: send skype
        uses: Eloco/docker-action-send-skype@v2
        if  : steps.aws-md5.outputs.FILE_NUM != '0' || steps.aws-md5.conclusion == 'skipped'
        with:
            skype_username : ${{ secrets.SKYPE_MINE_USERNAME }}
            skype_password : ${{ secrets.SKYPE_MINE_PASSWORD }}
            skype_ids      : 19:5a8aeaf6a918417a8b9396982180afd0@thread.skype
            send_msg_path  : message.txt 
            send_file_path : screenshot

