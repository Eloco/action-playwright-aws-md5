name: 'midday_daily'

on:
  workflow_dispatch:
    inputs:
        logLevel:
          description: 'Log level'     
          required: true
          default: 'warning'
        tags:
          description: 'action'  
  schedule:
    - cron:  '00 04 * * *'


jobs:
  playwright:
    runs-on: ubuntu-latest
    env:
      repo_name  : Eloco/action-playwright-aws-md5
      repo_token : SEC_TOKEN
      IF_PLAYWRIGHT: True
    strategy:
      matrix:
       include:
         - script: script/github_playwright.py
           script_name: github_playwright
           skype_id: 19:d32d3d93d57740308986b42ec36e5525@thread.skype
           gist_id : 3fd32567b6c8f6c79808905de208e59a
         - script: script/covid19CN_playwright.py
           script_name: covid19CN_playwright
           skype_id: 19:d32d3d93d57740308986b42ec36e5525@thread.skype
           gist_id : 3fd32567b6c8f6c79808905de208e59a

    steps:
      - name: Checkout codes
        uses: actions/checkout@v2
        with:
          repository: '${{ env.repo_name  }}'
          token:      '${{ secrets[env.repo_token]  }}'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: set cn-lang
        run: |
            sudo apt-get install fonts-wqy-zenhei
        continue-on-error: true

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install pipreqs
            pipreqs .
            pip install -r requirements.txt

      - name: Install Playwright
        if: ${{ env.IF_PLAYWRIGHT == 'True'}}
        run: |
            python -m playwright install

      - name: run python downloader
        run: |
            export command="python $MATRIX_SCRIPT 2>/dev/null"
            timeout 5m bash -c '$command || $command'  #retry command twice 
        env:
            MATRIX_SCRIPT: ${{matrix.script}}

      - name: gist-read
        uses: sergeysova/gist-read-action@v1
        id: example-gist
        continue-on-error: true
        with:
          gist_id: ${{matrix.gist_id}}
          file_name: ${{matrix.script_name}}
        env:
          GITHUB_TOKEN: ${{ secrets.SEC_TOKEN }}

      - name: md5_count
        run: |
            wget https://raw.githubusercontent.com/Eloco/action-playwright-aws-md5/main/script/gist_md5.py
            echo "${{ steps.example-gist.outputs.content }}" > md5.txt || echo "first init" > md5.txt 
            files_num=`python gist_md5.py --file_md5="./md5.txt" --file_dir=screenshot`
            echo $files_num
            echo '::set-output name=FILE_NUM::'$files_num
            head md5.txt
        id: gist-md5

      - uses: popsiclestick/gist-sync-action@v1.2.0
        if  :  steps.gist-md5.outputs.FILE_NUM != '0'
        with:
          auth: ${{ secrets.SEC_TOKEN }}
          gist_url: https://gist.github.com/Eloco/${{matrix.gist_id}}
          gist_title: ${{matrix.script_name}}
          gist_description: ${{matrix.script_name}}
          github_file: md5.txt

      - name: send skype
        continue-on-error: true
        uses: Eloco/docker-action-send-skype@v2
        if  : steps.gist-md5.outputs.FILE_NUM != '0'
        with:
            skype_username : ${{ secrets.SKYPE_USERNAME }}
            skype_password : ${{ secrets.SKYPE_PASSWORD }}
            skype_ids      : ${{ matrix.skype_id  }} 
            send_msg_path  : message.txt 
            send_file_path : screenshot

  non-playwright:
    runs-on: ubuntu-latest
    env:
      repo_name  : Eloco/action-playwright-aws-md5
      repo_token : SEC_TOKEN
      IF_PLAYWRIGHT: False
    strategy:
      matrix:
       include:
         - script: https://raw.githubusercontent.com/Eloco/Script-collect/main/misc/douban_movie.py
           skype_id: 19:c941776d71c7417abf8fdb06b4160e05@thread.skype
           gist_id : 3fd32567b6c8f6c79808905de208e59a
           skype_username : SKYPE_MINE_USERNAME
           skype_password : SKYPE_MINE_PASSWORD
           FILE_BASE: message
           script_name: douban_movie
  
    steps:

      - name: Checkout codes
        uses: actions/checkout@v2
        with:
          repository: '${{ env.repo_name  }}'
          token:      '${{ secrets[env.repo_token]  }}'
  
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
  
      - name: Install dependencies
        run: |
            curl $MATRIX_SCRIPT -o main_script.py
            python -m pip install --upgrade pip
            pip install pipreqs
            pipreqs .
            pip install -r requirements.txt
        env:
            MATRIX_SCRIPT: ${{matrix.script}}
  
      - name: Install Playwright
        if: ${{ env.IF_PLAYWRIGHT  == 'True'}}
        run: |
            python -m playwright install
        env:
            IF_PLAYWRIGHT: ${{ matrix.IF_PLAYWRIGHT }}
  
      - name: run python
        run: |
            python main_script.py
  
      - name: gist-read
        uses: sergeysova/gist-read-action@v1
        continue-on-error: true
        id: example-gist
        with:
          gist_id: ${{matrix.gist_id}}
          file_name: ${{matrix.script_name}}
        env:
          GITHUB_TOKEN: ${{ secrets.SEC_TOKEN }}
  
      - name: md5_count
        run: |
            wget https://raw.githubusercontent.com/Eloco/action-playwright-aws-md5/main/script/gist_md5.py
            echo "${{ steps.example-gist.outputs.content }}" > md5.txt || echo "first init" > md5.txt 
            files_num=`python gist_md5.py --file_md5="./md5.txt" --file_dir=${{ matrix.FILE_BASE }}`
            echo $files_num
            echo '::set-output name=FILE_NUM::'$files_num
            head md5.txt
        id: gist-md5
  
      - uses: popsiclestick/gist-sync-action@v1.2.0
        if  :  steps.gist-md5.outputs.FILE_NUM != '0'
        with:
          auth: ${{ secrets.SEC_TOKEN }}
          gist_url: https://gist.github.com/Eloco/${{matrix.gist_id}}
          gist_title: ${{matrix.script_name}}
          gist_description: ${{matrix.script_name}}
          github_file: md5.txt
  
      - name: send skype
        uses: Eloco/docker-action-send-skype@v2
        if  : steps.gist-md5.outputs.FILE_NUM != '0'
        with:
            skype_username : ${{ secrets[matrix.skype_username] }}
            skype_password : ${{ secrets[matrix.skype_password] }}
            skype_ids      : ${{ matrix.skype_id  }} 
            send_msg_path  : ${{ matrix.FILE_BASE }}
            send_file_path : none
